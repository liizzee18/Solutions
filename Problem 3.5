
smallOnTop(Stack<Integer> s) {
		Stack<Integer> s2= new Stack<Integer>();
		
		int t=s.pop();
		
		while(!s2.isEmpty() && s2.peek() > t) {
			s.push(s2.pop());
		}
		s2.push(t);
	}



D:  Sort stack from smallest to largest value

E&A(Duke's 7 Steps):

(1)
When the given array is given without being sorted the array should be in ascending order after the function.

(2)

The way I thought of it was with the use of one stack, but later on I saw that a simpler solution 
was available with the use of one less stack. 

(3)

Uses an extra stack to move items into place.
only while loops used.

(4)

[5,7,2,8,4,9,1] original stack
[9,8,7,5,4,2,1] temp stack
[1,2,4,5,7,8,9] original stack

(5)Code implemented above

(6)
[5,7,2,8,4,9,1]
[4,2,5,0,0,3,8]
[0,0,0,0,0,0]

(7) Possible with only one extra stack.

L - Works for all cases. 
